Server: would store the code that detemines the most efficient way
to request any of that data from the database

Authentication: determines that the user at that is trying to access the server or
the database is who they say they are


********
collection: it's like a group of object except those object
are the second type of data called documents
you can almost see them as an array of things and each 
of those things can also have properties that point to others
collections


documents:
doc.data() in order to get the data of the snapshot


collectionRef.onSnapshot(): whenever the collection ref updates or whenever this code gets run for the first time
this collection ref will send us the snapshot representing the code of our collections objects array at the time
when this code renders

********
React rules:
whem ever we make this update we always to return a new array even if the object stays the same

Utility functions: allow us to keep our files clean and organize functions that we may need in multiple files in one location


Data Normalization: is the ideal way that we should be storing large arrays of elements
where we need the individual element inside of our reducer

Definition: ---> you can store lists of elements as objects instead of arrays
this is actually a pretty common thing that will encounter when talking about back ends and databases
(hash table)


styled-component: really help us make sure that we keep all our components and what the component is concerned
about in one place in our javascript

Data Flow:



